{"version":3,"sources":["utils.js","models/Box.js","models/Ribbon.js","View.js","App.js","index.js"],"names":["atoms","str","join","split","filter","x","reduce","a","c","Symbol","_templateObject","window","DEFAULTS","width","height","depth","color","edges","y","z","castShadow","receiveShadow","Ribbon_templateObject","data","Object","toConsumableArray","Array","map","_","i","Math","log","random","xFn","_ref","slicedToArray","yFn","_ref3","_ref4","strokeWidth","strokeDepth","strokeWidthPath","w","p","_p","px","py","_ref5","undefined","_ref6","p1","p2","_p2","x1","y1","_p3","x2","nx","ny","magnitude","hypot","StyledViewWrapper","styled","div","withConfig","displayName","componentId","PI2","PI","View","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","viewRef","React","createRef","animate","bind","assertThisInitialized","viewEl","current","_viewEl$getBoundingCl","getBoundingClientRect","scene","T","background","directionalLight","position","set","normalize","add","ambientLight","$","assign","group","geometry","material","mesh","Box","spotLight","angle","shadow","camera","near","far","mapSize","target","renderer","antialias","shadowMap","enabled","type","setSize","appendChild","domElement","lookAt","d3","colors","s","parseInt","slice","ribbons","xBounds","min","apply","max","yBounds","xScale","domain","range","yScale","points","stroke","forwardPath","reversePath","reverse","path","concat","shape","_path$","startX","startY","moveTo","forEach","_ref7","_ref8","lineTo","Ribbon","floor","r","$i","sin","render","requestAnimationFrame","initialize","populateScene","react_default","createElement","ref","Component","GlobalStyle","createGlobalStyle","App_templateObject","StyledApp","App","View_View","ReactDOM","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.46ecad17.chunk.js","sourcesContent":["export const atoms = str => (\n  str\n  .join()\n  .split(' ')\n  .filter(x => x)\n  .reduce((a, c) => ((a[c] = Symbol(c) || 1) && a), {})\n);\n","import * as T from 'three';\nimport { atoms } from '../utils';\n\nexport const TYPE = atoms`\n  EDGE\n  SOLID\n`;\n\nwindow.atoms = atoms;\n\nconst DEFAULTS = {\n  width: 100,\n  height: 100,\n  depth: 100,\n  color: 0xff0000,\n  edges: false,\n  x: 0,\n  y: 0,\n  z: 0,\n  castShadow: true,\n  receiveShadow: true,\n};\n\nexport default function Box($) {\n  $ = Object.assign({}, DEFAULTS, $);\n\n  const group = new T.Group();\n\n  const geometry = new T.BoxBufferGeometry($.width, $.height, $.depth);\n  const material = new T.MeshLambertMaterial({ color: $.color });\n  const mesh = new T.Mesh(geometry, material);\n  mesh.castShadow = $.castShadow;\n  mesh.receiveShadow = $.receiveShadow;\n\n  group.add(mesh);\n\n  if ($.edges) {\n    const edges = {};\n    edges.geometry = new T.EdgesGeometry(geometry);\n    edges.material = new T.LineBasicMaterial({ color: 0xffffff ^ $.color });\n    edges.mesh = new T.LineSegments(edges.geometry, edges.material);\n    group.add(edges.mesh);\n  }\n\n  group.position.set($.x, $.y, $.z);\n\n  return group;\n}\n","import * as T from 'three';\nimport * as d3 from 'd3';\n\nimport { atoms } from '../utils';\n\nexport const TYPE = atoms`\n  SOLID\n\n`;\n\nconst DEFAULTS = {\n  data: [...Array(100)].map((_, i) => [i, Math.log(Math.random()*10)]),\n  xFn: ([x]) => x,\n  yFn: ([_, y]) => y,\n  width: 2000,\n  height: 100,\n  strokeWidth: 1,\n  strokeDepth: 100,\n  color: 0xff0000,\n  edges: false,\n  x: 0,\n  y: 0,\n  z: 0,\n  castShadow: true,\n  receiveShadow: true,\n};\n\nconst strokeWidthPath = w => (p, i, a) => {\n  // reference point for stroke\n  const [ px, py ] = p;\n\n  // p1 and p2 used to compute normal\n  const [ p1, p2 ] = a[i+1] === undefined ? [a[i-1], p] : [p, a[i+1]];\n\n  const [ x1, y1 ] = p1;\n  const [ x2, y2 ] = p2;\n\n  // normal\n  const [ nx, ny ] = [ y1 - y2, x2 - x1 ];\n  const magnitude = Math.hypot(nx, ny);\n\n  // normal vector\n  const [ vx, vy ] = [ nx / magnitude, ny / magnitude ];\n\n  // translate stroke\n  return [ px + vx * w/2, py + vy * w/2 ];\n};\n\nexport default function Ribbon($) {\n  $ = Object.assign({}, DEFAULTS, $);\n\n  const x = $.data.map($.xFn);\n  const y = $.data.map($.yFn);\n\n  const xBounds = [ Math.min.apply(null, x), Math.max.apply(null, x) ];\n  const yBounds = [ Math.min.apply(null, y), Math.max.apply(null, y) ];\n\n  const xScale = d3.scaleLinear()\n    .domain(xBounds)\n    .range([ -$.width/2, $.width/2 ])\n  ;\n\n  const yScale = d3.scaleLinear()\n    .domain(yBounds)\n    .range([ -$.height/2, $.height/2 ])\n  ;\n\n  const points = d3.zip(x.map(xScale), y.map(yScale));\n\n  const stroke = strokeWidthPath($.strokeWidth)\n\n  const forwardPath = points.map(stroke);\n  const reversePath = points.reverse().map(stroke);\n\n  const path = forwardPath.concat(reversePath);\n\n  const shape = new T.Shape();\n\n  const [ startX, startY ] = path[0];\n\n  shape.moveTo(startX, startY);\n  path\n    .slice(1)\n    .forEach(([ x, y ]) => shape.lineTo(x, y))\n  ;\n  shape.lineTo(startX, startY);\n\n  const geometry = new T.ExtrudeBufferGeometry(shape, { depth: $.strokeDepth });\n  const material = new T.MeshLambertMaterial({ color: $.color });\n  const mesh = new T.Mesh(geometry, material);\n\n  mesh.castShadow = $.castShadow;\n  mesh.receiveShadow = $.receiveShadow;\n\n  mesh.position.set($.x, $.y, $.z);\n\n  return mesh;\n}\n","import React, { Component } from 'react';\nimport * as T from 'three';\nimport styled from 'styled-components';\nimport * as d3 from 'd3'; \n\nimport Box from './models/Box';\nimport Ribbon from './models/Ribbon';\n\nconst StyledViewWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: green;\n`;\n\nconst PI2 = Math.PI*2;\n\n\nconst rdata = () => [...Array(100)]\n  .map((_, i) => [i, Math.log(Math.random()*10)])\n;\n\nexport default class View extends Component {\n  constructor(props) {\n    super(props);\n\n    this.viewRef = React.createRef();\n    this.animate = this.animate.bind(this);\n  }\n\n  initialize() {\n    const viewEl = this.viewRef.current;\n    const { width, height } =  viewEl.getBoundingClientRect();\n\n    const scene = new T.Scene();\n    scene.background = new T.Color(0x051231);\n\n    const directionalLight = new T.DirectionalLight(0xffffff, 0.1);\n    directionalLight.position.set(0, 200, 1000).normalize();\n    scene.add(directionalLight);\n\n    const ambientLight = new T.AmbientLight(0xaaaaaa);\n    scene.add(ambientLight);\n\n    const background = Box({\n      width: 2000,\n      height: 2000,\n      depth: 10,\n      // color: 0x8f8f8f8f,\n       color: 0x000827,\n      //edges: true,\n      x: 0,\n      y: 0,\n      z: -200,\n    });\n    scene.add(background);\n\n    const spotLight = new T.SpotLight(0xffffff, 1);\n    spotLight.castShadow = true;\n    spotLight.position.set(0, 300, 1200);\n    spotLight.angle = Math.PI / 3\n    spotLight.shadow.camera.near = 200;\n    spotLight.shadow.camera.far = 4000;\n    spotLight.shadow.mapSize.width = 4096;\n    spotLight.shadow.mapSize.height = 4096;\n    spotLight.target = background;\n    scene.add(spotLight);\n\n\n    const camera = new T.PerspectiveCamera(90, width/height, 1, 10000);\n    const renderer = new T.WebGLRenderer({ antialias: true });\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = T.PCFShadowMap;\n    renderer.setSize(width, height);\n    viewEl.appendChild(renderer.domElement);\n\n    camera.position.set(0, -1000, 1500);\n    camera.lookAt(0, 0, 0);\n\n    //scene.add(new T.AxesHelper(5));\n\n    window.d3 = d3;\n\n    Object.assign(this, { scene, camera, renderer });\n  }\n\n  populateScene() {\n    const { scene }  = this;\n\n    const colors = d3.schemeSet3.map(s => parseInt(s.slice(1), 16));\n    const color = i => colors[Math.floor(Math.random()*10)];\n\n    const ribbons = [...Array(20)]\n      .map((_, i) => Ribbon({ color: color(i), data: rdata(), y: 1000 - 100*i }))\n    ;\n\n    scene.add.apply(scene, ribbons);\n\n    Object.assign(this, { ribbons });\n  }\n\n  animate(i) {\n    const { camera, renderer, scene, ribbons } = this;\n\n    ribbons.forEach((r, $i) => {\n      r.position.z = (\n        Math.sin((i * PI2 / 100) + ($i * PI2 / 10) + 1) * 50\n      );\n    });\n\n    // d1 = dchange(d1, box1);\n    // d2 = dchange(d2, box2);\n    // d3 = dchange(d3, box3);\n\n    // box1.position.z += d1 * 10;\n    // box2.position.z += d2 * 10;\n    // box3.position.z += d3 * 10;\n\n     //if (camera.position.y < 0) {\n     //  camera.position.z += 4;\n     //  camera.position.y += 5;\n     //  camera.lookAt(0, 0, 0);\n     //} else {\n     //}\n\n    renderer.render(scene, camera);\n\n    requestAnimationFrame(this.animate.bind(this, ++i % 100));\n  }\n\n  componentDidMount() {\n    this.initialize();\n    this.populateScene();\n    this.animate(0);\n  }\n\n  render() {\n    return <StyledViewWrapper ref={this.viewRef} />;\n  }\n}\n","import React, { Component } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport View from './View';\n\nconst GlobalStyle = createGlobalStyle`\n  html, body {\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n  }\n\n  #root {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst StyledApp = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nexport default class App extends Component {\n  render() {\n    return (\n      <StyledApp>\n        <GlobalStyle />\n        <View />\n      </StyledApp>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}