{"version":3,"sources":["utils.js","models/Box.js","models/Ribbon.js","View.js","App.js","index.js"],"names":["atoms","str","join","split","filter","x","reduce","a","c","Symbol","_templateObject","window","DEFAULTS","width","height","depth","color","edges","y","z","castShadow","receiveShadow","Ribbon_templateObject","Math","PI","data","Object","toConsumableArray","Array","map","_","i","log","random","xFn","_ref","slicedToArray","yFn","_ref3","_ref4","strokeWidth","strokeDepth","transparent","opacity","normalVec","_ref5","_ref6","_ref7","x1","y1","_ref8","x2","n","m","magnitude","v","hypot","apply","angle","v1","v2","acos","_ref9","_ref10","_ref11","_ref12","dot","translateLine","_ref17","_ref18","_ref18$","_ref18$2","y2","w","arguments","length","undefined","_normalVec","_normalVec2","vx","vy","slope","_ref21","_ref22","_ref22$","_ref22$2","contains","_ref23","_ref24","_ref25","_ref25$","_ref25$2","_ref26","px","py","maxX","max","maxY","minX","min","minY","strokeWidthPath","segmentSize","p","_p","prevRef","nextRef","prev","next","prevSlope","nextSlope","slopeDiff","prevY0","nextY0","intersect","arcAngle","numArcs","numPoints","floor","arcPoints","_rotate","_ref19","_ref20","cos","sin","rotate","_rotate2","rx","ry","concat","StyledViewWrapper","styled","div","withConfig","displayName","componentId","PI2","rdata","View","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","viewRef","React","createRef","animate","bind","assertThisInitialized","update","viewEl","current","_viewEl$getBoundingCl","getBoundingClientRect","scene","T","background","directionalLight","position","set","normalize","add","ambientLight","$","assign","group","geometry","material","mesh","Box","spotLight","shadow","camera","near","far","mapSize","target","renderer","antialias","shadowMap","enabled","type","setSize","appendChild","domElement","lookAt","d3","_viewEl$getBoundingCl2","aspect","colors","s","parseInt","slice","ribbons","d","xBounds","yBounds","xScale","domain","range","yScale","points","stroke","forwardPath","reversePath","reverse","path","shape","_path$","startX","startY","moveTo","forEach","_ref27","_ref28","lineTo","bevelEnabled","Ribbon","r","$i","render","requestAnimationFrame","initialize","populateScene","addEventListener","removeEventListener","react_default","createElement","ref","Component","GlobalStyle","createGlobalStyle","App_templateObject","StyledApp","App","View_View","ReactDOM","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.9cd5d1d2.chunk.js","sourcesContent":["export const atoms = str => (\n  str\n  .join()\n  .split(' ')\n  .filter(x => x)\n  .reduce((a, c) => ((a[c] = Symbol(c) || 1) && a), {})\n);\n","import * as T from 'three';\nimport { atoms } from '../utils';\n\nexport const TYPE = atoms`\n  EDGE\n  SOLID\n`;\n\nwindow.atoms = atoms;\n\nconst DEFAULTS = {\n  width: 100,\n  height: 100,\n  depth: 100,\n  color: 0xff0000,\n  edges: false,\n  x: 0,\n  y: 0,\n  z: 0,\n  castShadow: true,\n  receiveShadow: true,\n};\n\nexport default function Box($) {\n  $ = Object.assign({}, DEFAULTS, $);\n\n  const group = new T.Group();\n\n  const geometry = new T.BoxBufferGeometry($.width, $.height, $.depth);\n  const material = new T.MeshLambertMaterial({ color: $.color });\n  const mesh = new T.Mesh(geometry, material);\n  mesh.castShadow = $.castShadow;\n  mesh.receiveShadow = $.receiveShadow;\n\n  group.add(mesh);\n\n  if ($.edges) {\n    const edges = {};\n    edges.geometry = new T.EdgesGeometry(geometry);\n    edges.material = new T.LineBasicMaterial({ color: 0xffffff ^ $.color });\n    edges.mesh = new T.LineSegments(edges.geometry, edges.material);\n    group.add(edges.mesh);\n  }\n\n  group.position.set($.x, $.y, $.z);\n\n  return group;\n}\n","import * as T from 'three';\nimport * as d3 from 'd3';\n\nimport { atoms } from '../utils';\n\nexport const TYPE = atoms`\n  SOLID\n\n`;\n\nconst PI2 = Math.PI*2;\n\nconst DEFAULTS = {\n  data: [...Array(100)].map((_, i) => [i, Math.log(Math.random()*10)]),\n  xFn: ([x]) => x,\n  yFn: ([_, y]) => y,\n  width: 2000,\n  height: 80,\n  strokeWidth: 6,\n  strokeDepth: 30,\n  color: 0xff0000,\n  transparent: false,\n  opacity: 0.2,\n  edges: false,\n  x: 0,\n  y: 0,\n  z: 0,\n  castShadow: true,\n  receiveShadow: true,\n};\n\nconst normalVec = ([x1, y1], [x2, y2]) => {\n  // normal\n  const n = [ y1 - y2, x2 - x1 ];\n  const m = magnitude(n);\n  const [ nx, ny ] = n;\n  return [ nx / m, ny / m ];;\n}\n\nconst dot = ([x1, y1], [x2, y2]) => {\n  return x1 * x2 + y1 * y2;\n}\n\nconst magnitude = v => Math.hypot(...v);\n\nconst angle = (v1, v2) => {\n  return Math.acos(dot(v1, v2) / (magnitude(v1) * magnitude(v2)));\n};\n\nconst unitVec = ([x1, y1], [x2, y2]) => {\n  const [ ux, uy ] = [ x2 - x1, y2 - y1 ];\n  const m = magnitude([ux, uy]);\n  return [ ux / m, uy / m ];\n}\n\nconst translateLine = ([[x1, y1], [x2, y2]], w=0) => {\n  const [ vx, vy ] = normalVec([x1, y1], [x2, y2]);\n\n  // translate stroke\n  return [[ x1 + vx * w, y1 + vy * w ], [ x2 + vx * w, y2 + vy * w ]];\n};\n\nconst rotate = ([vx, vy], a) => {\n  const cos = Math.cos(a);\n  const sin = Math.sin(a);\n  return [cos * vx + sin * vy, -sin * vx + cos * vy];\n}\n\nconst slope = ([[x1, y1], [x2, y2]]) => (y2 - y1) / (x2 - x1);\n\nconst contains = ([[x1, y1], [x2, y2]], [px, py]) => {\n  const maxX = Math.max(x1, x2);\n  const maxY = Math.max(y1, y2);\n  const minX = Math.min(x1, x2);\n  const minY = Math.min(y1, y2);\n\n  return px >= minX && px <= maxX && py >= minY && py <= maxY\n};\n\nconst strokeWidthPath = (w, segmentSize=Math.PI/8) => (p, i, a) => {\n  const [px, py] = p;\n  // reference point for stroke\n  const prevRef = [a[i - 1] || [], p];\n  const nextRef = [p, a[i + 1] || []];\n\n  const prev = translateLine(prevRef, w);\n  const next = translateLine(nextRef, w);\n\n  if (a[i - 1] === undefined)\n    return [next[0]];\n\n  if (a[i + 1] === undefined)\n    return [prev[1]];\n\n  const prevSlope = slope(prev);\n  const nextSlope = slope(next);\n  const slopeDiff = nextSlope - prevSlope;\n\n  //if (Math.abs(slopeDiff) < 0.0000001)\n  //  return [prev[1]];\n\n  const prevY0 = prev[0][1] - prevSlope * prev[0][0];\n  const nextY0 = next[0][1] - nextSlope * next[0][0];\n\n  const intersectX = (prevY0 - nextY0) / (nextSlope - prevSlope);\n  const intersectY = ((prevY0 * nextSlope) - (nextY0 * prevSlope)) / slopeDiff;\n\n  const intersect = [intersectX, intersectY];\n\n  if (contains(prev, intersect) || contains(next, intersect))\n    return [intersect];\n\n  const arcAngle = angle(normalVec(...prevRef), normalVec(...nextRef));\n  const numArcs = arcAngle / segmentSize;\n  const numPoints = Math.max(0, Math.floor(numArcs) - 1);\n\n  const arcPoints = [...Array(numPoints)]\n    .map((_, i) => {\n      const [ rx, ry ] = rotate(\n        normalVec(...prevRef),\n        (i + 1) * arcAngle / (numPoints + 1)\n      );\n\n      return [ px + rx * w, py + ry * w ];\n    })\n  ;\n\n  return [prev[1], ...arcPoints];\n};\n\nexport default function Ribbon($) {\n  $ = Object.assign({}, DEFAULTS, $);\n\n  const x = $.data.map($.xFn);\n  const y = $.data.map($.yFn);\n\n  const xBounds = [ Math.min(...x), Math.max(...x) ];\n  const yBounds = [ Math.min(...y), Math.max(...y) ];\n\n  const xScale = d3.scaleLinear()\n    .domain(xBounds)\n    .range([ -$.width/2, $.width/2 ])\n  ;\n\n  const yScale = d3.scaleLinear()\n    .domain(yBounds)\n    .range([ -$.height/2, $.height/2 ])\n  ;\n\n  const points = d3.zip(x.map(xScale), y.map(yScale));\n\n  const stroke = strokeWidthPath($.strokeWidth)\n\n  const forwardPath = points\n    .map(stroke)\n    .reduce((a, p) => [...a, ...p])\n  ;\n\n  const reversePath = points\n    .reverse()\n    .map(stroke)\n    .reduce((a, p) => [...a, ...p])\n  ;\n\n  const path = [...forwardPath, ...reversePath];\n\n  const shape = new T.Shape();\n\n  const [ startX, startY ] = path[0];\n\n  shape.moveTo(startX, startY);\n  path\n    .slice(1)\n    .forEach(([ x, y ]) => shape.lineTo(x, y))\n  ;\n  shape.lineTo(startX, startY);\n\n  const geometry = new T.ExtrudeBufferGeometry(\n    shape, \n    { depth: $.strokeDepth, bevelEnabled: false }\n  );\n  const material = new T.MeshLambertMaterial({\n    color: $.color,\n    opacity: $.opacity,\n    transparent: $.transparent,\n  });\n\n  const mesh = new T.Mesh(geometry, material);\n\n  mesh.castShadow = $.castShadow;\n  mesh.receiveShadow = $.receiveShadow;\n\n  mesh.position.set($.x, $.y, $.z);\n\n  return mesh;\n}\n","import React, { Component } from 'react';\nimport * as T from 'three';\nimport styled from 'styled-components';\nimport * as d3 from 'd3'; \n\nimport Box from './models/Box';\nimport Ribbon from './models/Ribbon';\n\nconst StyledViewWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: green;\n`;\n\nconst PI2 = Math.PI*2;\n\n\nconst rdata = () => [...Array(100)]\n  .map((_, i) => [i, Math.log(Math.random()*10)])\n;\n\nexport default class View extends Component {\n  constructor(props) {\n    super(props);\n\n    this.viewRef = React.createRef();\n    this.animate = this.animate.bind(this);\n    this.update = this.update.bind(this);\n  }\n\n  initialize() {\n    const viewEl = this.viewRef.current;\n    const { width, height } =  viewEl.getBoundingClientRect();\n\n    const scene = new T.Scene();\n    scene.background = new T.Color(0x051231);\n\n    const directionalLight = new T.DirectionalLight(0xffffff, 0.2);\n    directionalLight.position.set(0, 200, 1000).normalize();\n    scene.add(directionalLight);\n\n    const ambientLight = new T.AmbientLight(0xcccccc);\n    scene.add(ambientLight);\n\n    const background = Box({\n      width: 3000,\n      height: 3000,\n      depth: 10,\n      // color: 0x8f8f8f8f,\n       color: 0x000827,\n      //edges: true,\n      x: 0,\n      y: 100,\n      z: -200,\n    });\n    scene.add(background);\n\n    const spotLight = new T.SpotLight(0xffffff, 0.5);\n    spotLight.castShadow = true;\n    spotLight.position.set(0, 50, 1200);\n    spotLight.angle = Math.PI / 3\n    spotLight.shadow.camera.near = 200;\n    spotLight.shadow.camera.far = 4000;\n    spotLight.shadow.mapSize.width = 4096;\n    spotLight.shadow.mapSize.height = 4096;\n    spotLight.target = background;\n    scene.add(spotLight);\n\n\n    const camera = new T.PerspectiveCamera(70, width/height, 1, 10000);\n    const renderer = new T.WebGLRenderer({ antialias: true });\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = T.PCFShadowMap;\n    renderer.setSize(width, height);\n    viewEl.appendChild(renderer.domElement);\n\n    camera.position.set(0, -1300, 1200);\n    camera.lookAt(0, 0, 0);\n\n    //scene.add(new T.AxesHelper(5));\n\n    window.d3 = d3;\n\n    Object.assign(this, { scene, camera, renderer });\n  }\n\n  update() {\n    const viewEl = this.viewRef.current;\n    const { width, height } =  viewEl.getBoundingClientRect();\n    const { camera, renderer } = this;\n\n    camera.aspect = width/height;\n    renderer.setSize(width, height);\n  }\n\n  populateScene() {\n    const { scene }  = this;\n\n    const colors = d3.schemeSet3.map(s => parseInt(s.slice(1), 16));\n\n    const c = {};\n    const color = (i) => {\n      if (c[i] === undefined)\n        c[i] = colors[Math.floor(Math.random()*10)]\n      ;\n\n      return c[i];\n    };\n\n    const d = [...Array(20)].map(rdata);\n\n    const ribbons = (\n      d.map((d, i) => Ribbon({ color: color(i), data: d, y: 1000 - 100*i }))\n    );\n\n    //const streamers = (\n    //  d.map((d, i) => Ribbon({\n    //    color: color(i),\n    //    data: d,\n    //    y: 1000 - 100*i,\n    //    transparent: true,\n    //    castShadow: false,\n    //    receiveShadow: false,\n    //    opacity: 0.2,\n    //  }))\n    //);\n\n    //const streamers2 = (\n    //  d.map((d, i) => Ribbon({\n    //    color: color(i),\n    //    data: d,\n    //    y: 1000 - 100*i,\n    //    //transparent: true,\n    //    castShadow: false,\n    //    receiveShadow: false,\n    //    opacity: 0.1,\n    //  }))\n    //);\n\n\n    //scene.add.apply(scene, streamers2);\n    //scene.add.apply(scene, streamers);\n    scene.add.apply(scene, ribbons);\n\n    Object.assign(this, { ribbons, });\n  }\n\n  animate(i) {\n    const { camera, renderer, scene, ribbons, } = this;\n\n    ribbons.forEach((r, $i) => {\n      r.position.z = (\n        ((Math.sin((i * PI2 / 100) + ($i * PI2 / 10)) + 1) * 20)\n      ) + 100;\n    });\n\n    //streamers.forEach((r, $i) => {\n    //  r.position.z = (\n    //    ((Math.sin((((i-10)%100) * PI2 / 100) + ($i * PI2 / 10)) + 1) * 80)\n    //  ) + 100;\n    //});\n\n    //streamers2.forEach((r, $i) => {\n    //  r.position.z = (\n    //    ((Math.sin((((i-10)%100) * PI2 / 100) + ($i * PI2 / 10)) + 1) * 80)\n    //  ) + 100;\n    //});\n\n    // d1 = dchange(d1, box1);\n    // d2 = dchange(d2, box2);\n    // d3 = dchange(d3, box3);\n\n    // box1.position.z += d1 * 10;\n    // box2.position.z += d2 * 10;\n    // box3.position.z += d3 * 10;\n\n    //if (camera.position.y < 0) {\n    //  camera.position.z += 4;\n    //  camera.position.y += 5;\n    //  camera.lookAt(0, 0, 0);\n    //} else {\n    //}\n\n    renderer.render(scene, camera);\n\n    requestAnimationFrame(this.animate.bind(this, ++i % 100));\n  }\n\n  componentDidMount() {\n    this.initialize();\n    this.populateScene();\n    this.animate(0);\n    window.addEventListener('resize', this.update);\n  }\n\n  componentDidUnmount() {\n    window.removeEventListener('resize', this.update);\n  }\n\n  render() {\n    return <StyledViewWrapper ref={this.viewRef} />;\n  }\n}\n","import React, { Component } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport View from './View';\n\nconst GlobalStyle = createGlobalStyle`\n  html, body {\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n  }\n\n  #root {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst StyledApp = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nexport default class App extends Component {\n  render() {\n    return (\n      <StyledApp>\n        <GlobalStyle />\n        <View />\n      </StyledApp>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}