{"version":3,"sources":["utils.js","models/Box.js","models/Ribbon.js","View.js","App.js","index.js"],"names":["atoms","str","join","split","filter","x","reduce","a","c","Symbol","_templateObject","window","DEFAULTS","width","height","depth","color","edges","y","z","castShadow","receiveShadow","Ribbon_templateObject","data","Object","toConsumableArray","Array","map","_","i","Math","log","random","xFn","_ref","slicedToArray","yFn","_ref3","_ref4","strokeWidth","strokeDepth","translateLine","_ref9","_ref10","_ref10$","x1","y1","_ref10$2","x2","y2","w","arguments","length","undefined","_normalVec","_ref5","_ref6","_ref7","_ref8","nx","ny","magnitude","hypot","normalVec","_normalVec2","vx","vy","slope","_ref11","_ref12","_ref12$","_ref12$2","contains","_ref13","_ref14","_ref15","_ref15$","_ref15$2","_ref16","px","py","maxX","max","maxY","minX","min","minY","strokeWidthPath","p","_p","prevRef","nextRef","prev","next","prevSlope","nextSlope","slopeDiff","prevY0","nextY0","intersectX","intersectY","intersect","dx","dy","StyledViewWrapper","styled","div","withConfig","displayName","componentId","PI2","PI","View","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","viewRef","React","createRef","animate","bind","assertThisInitialized","viewEl","current","_viewEl$getBoundingCl","getBoundingClientRect","scene","T","background","directionalLight","position","set","normalize","add","ambientLight","$","assign","group","geometry","material","mesh","Box","spotLight","angle","shadow","camera","near","far","mapSize","target","renderer","antialias","shadowMap","enabled","type","setSize","appendChild","domElement","lookAt","d3","colors","s","parseInt","slice","ribbons","xBounds","apply","yBounds","xScale","domain","range","yScale","points","stroke","forwardPath","concat","reversePath","reverse","path","shape","_path$","startX","startY","moveTo","forEach","_ref17","_ref18","lineTo","bevelEnabled","Ribbon","floor","r","$i","sin","render","requestAnimationFrame","initialize","populateScene","react_default","createElement","ref","Component","GlobalStyle","createGlobalStyle","App_templateObject","StyledApp","App","View_View","ReactDOM","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.c461c12f.chunk.js","sourcesContent":["export const atoms = str => (\n  str\n  .join()\n  .split(' ')\n  .filter(x => x)\n  .reduce((a, c) => ((a[c] = Symbol(c) || 1) && a), {})\n);\n","import * as T from 'three';\nimport { atoms } from '../utils';\n\nexport const TYPE = atoms`\n  EDGE\n  SOLID\n`;\n\nwindow.atoms = atoms;\n\nconst DEFAULTS = {\n  width: 100,\n  height: 100,\n  depth: 100,\n  color: 0xff0000,\n  edges: false,\n  x: 0,\n  y: 0,\n  z: 0,\n  castShadow: true,\n  receiveShadow: true,\n};\n\nexport default function Box($) {\n  $ = Object.assign({}, DEFAULTS, $);\n\n  const group = new T.Group();\n\n  const geometry = new T.BoxBufferGeometry($.width, $.height, $.depth);\n  const material = new T.MeshLambertMaterial({ color: $.color });\n  const mesh = new T.Mesh(geometry, material);\n  mesh.castShadow = $.castShadow;\n  mesh.receiveShadow = $.receiveShadow;\n\n  group.add(mesh);\n\n  if ($.edges) {\n    const edges = {};\n    edges.geometry = new T.EdgesGeometry(geometry);\n    edges.material = new T.LineBasicMaterial({ color: 0xffffff ^ $.color });\n    edges.mesh = new T.LineSegments(edges.geometry, edges.material);\n    group.add(edges.mesh);\n  }\n\n  group.position.set($.x, $.y, $.z);\n\n  return group;\n}\n","import * as T from 'three';\nimport * as d3 from 'd3';\n\nimport { atoms } from '../utils';\n\nexport const TYPE = atoms`\n  SOLID\n\n`;\n\nconst DEFAULTS = {\n  data: [...Array(100)].map((_, i) => [i, Math.log(Math.random()*10)]),\n  xFn: ([x]) => x,\n  yFn: ([_, y]) => y,\n  width: 2000,\n  height: 100,\n  strokeWidth: 4,\n  strokeDepth: 100,\n  color: 0xff0000,\n  edges: false,\n  x: 0,\n  y: 0,\n  z: 0,\n  castShadow: true,\n  receiveShadow: true,\n};\n\nconst normalVec = ([x1, y1], [x2, y2]) => {\n  // normal\n  const [ nx, ny ] = [ y1 - y2, x2 - x1 ];\n  const magnitude = Math.hypot(nx, ny);\n\n  // normal vector\n  return [ nx / magnitude, ny / magnitude ];\n}\n\nconst translateLine = ([[x1, y1], [x2, y2]], w=0) => {\n  const [ vx, vy ] = normalVec([x1, y1], [x2, y2]);\n\n  // translate stroke\n  return [[ x1 + vx * w, y1 + vy * w ], [ x2 + vx * w, y2 + vy * w ]];\n};\n\nconst slope = ([[x1, y1], [x2, y2]]) => (y2 - y1) / (x2 - x1);\n\nconst contains = ([[x1, y1], [x2, y2]], [px, py]) => {\n  const maxX = Math.max(x1, x2);\n  const maxY = Math.max(y1, y2);\n  const minX = Math.min(x1, x2);\n  const minY = Math.min(y1, y2);\n\n  return px >= minX && px <= maxX && py >= minY && py <= maxY\n};\n\nconst strokeWidthPath = w => (p, i, a) => {\n  const [px, py] = p;\n  // reference point for stroke\n  const prevRef = [a[i - 1] || [], p];\n  const nextRef = [p, a[i + 1] || []];\n\n  const prev = translateLine(prevRef, w);\n  const next = translateLine(nextRef, w);\n\n  if (a[i - 1] === undefined)\n    return [next[0]];\n\n  if (a[i + 1] === undefined)\n    return [prev[1]];\n\n  const prevSlope = slope(prev);\n  const nextSlope = slope(next);\n  const slopeDiff = nextSlope - prevSlope;\n\n  //if (Math.abs(slopeDiff) < 0.0000001)\n  //  return [prev[1]];\n\n  const prevY0 = [prev[0][1] - prevSlope * prev[0][0]];\n  const nextY0 = [next[0][1] - nextSlope * next[0][0]];\n\n  const intersectX = (prevY0 - nextY0) / (nextSlope - prevSlope);\n  const intersectY = ((prevY0 * nextSlope) - (nextY0 * prevSlope)) / slopeDiff;\n\n  const intersect = [intersectX, intersectY];\n\n  if (contains(prev, intersect) || contains(next, intersect))\n    return [intersect];\n\n  const [dx, dy] = [intersectX - px, intersectY - py];\n  const magnitude = Math.hypot(dx, dy);\n  const [vx, vy] = [dx / magnitude, dy / magnitude];\n  return [prev[1], [w * vx + px, w * vy + py], next[0]];\n\n  //const pv = [prev[1][0] - prev[0][0], prev[1][1] - prev[0][1]];\n  //const nv = [next[1][0] - next[0][0], next[1][1] - next[0][1]];\n  //const dot = pv[0] * nv[0] + pv[1] * nv[1];\n\n\n\n  //return [prev[1], [w * vx + px, w * vy + py]];\n\n  //const distance = Math.hypot(prev[1][0] - next[0][0], prev[1][1] - next[0][1]);\n  //const angle = asin(\n\n};\n\nwindow.strokeWidthPath = strokeWidthPath;\nwindow.translateLine = translateLine;\n\nexport default function Ribbon($) {\n  $ = Object.assign({}, DEFAULTS, $);\n\n  const x = $.data.map($.xFn);\n  const y = $.data.map($.yFn);\n\n  const xBounds = [ Math.min.apply(null, x), Math.max.apply(null, x) ];\n  const yBounds = [ Math.min.apply(null, y), Math.max.apply(null, y) ];\n\n  const xScale = d3.scaleLinear()\n    .domain(xBounds)\n    .range([ -$.width/2, $.width/2 ])\n  ;\n\n  const yScale = d3.scaleLinear()\n    .domain(yBounds)\n    .range([ -$.height/2, $.height/2 ])\n  ;\n\n  const points = d3.zip(x.map(xScale), y.map(yScale));\n\n  const stroke = strokeWidthPath($.strokeWidth)\n\n  const forwardPath = points\n    .map(stroke)\n    .reduce((a,x) => a.concat(x), [])\n  ;\n\n  const reversePath = points\n    .reverse()\n    .map(stroke)\n    .reduce((a,x) => a.concat(x), [])\n  ;\n\n  const path = forwardPath.concat(reversePath);\n\n  const shape = new T.Shape();\n\n  const [ startX, startY ] = path[0];\n\n  shape.moveTo(startX, startY);\n  path\n    .slice(1)\n    .forEach(([ x, y ]) => shape.lineTo(x, y))\n  ;\n  shape.lineTo(startX, startY);\n\n  const geometry = new T.ExtrudeBufferGeometry(\n    shape, \n    { depth: $.strokeDepth, bevelEnabled: false }\n  );\n  const material = new T.MeshLambertMaterial({ color: $.color });\n  const mesh = new T.Mesh(geometry, material);\n\n  mesh.castShadow = $.castShadow;\n  mesh.receiveShadow = $.receiveShadow;\n\n  mesh.position.set($.x, $.y, $.z);\n\n  return mesh;\n}\n","import React, { Component } from 'react';\nimport * as T from 'three';\nimport styled from 'styled-components';\nimport * as d3 from 'd3'; \n\nimport Box from './models/Box';\nimport Ribbon from './models/Ribbon';\n\nconst StyledViewWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: green;\n`;\n\nconst PI2 = Math.PI*2;\n\n\nconst rdata = () => [...Array(100)]\n  .map((_, i) => [i, Math.log(Math.random()*10)])\n;\n\nexport default class View extends Component {\n  constructor(props) {\n    super(props);\n\n    this.viewRef = React.createRef();\n    this.animate = this.animate.bind(this);\n  }\n\n  initialize() {\n    const viewEl = this.viewRef.current;\n    const { width, height } =  viewEl.getBoundingClientRect();\n\n    const scene = new T.Scene();\n    scene.background = new T.Color(0x051231);\n\n    const directionalLight = new T.DirectionalLight(0xffffff, 0.2);\n    directionalLight.position.set(0, 200, 1000).normalize();\n    scene.add(directionalLight);\n\n    const ambientLight = new T.AmbientLight(0xcccccc);\n    scene.add(ambientLight);\n\n    const background = Box({\n      width: 3000,\n      height: 3000,\n      depth: 10,\n      // color: 0x8f8f8f8f,\n       color: 0x000827,\n      //edges: true,\n      x: 0,\n      y: 100,\n      z: -200,\n    });\n    scene.add(background);\n\n    const spotLight = new T.SpotLight(0xffffff, 0.5);\n    spotLight.castShadow = true;\n    spotLight.position.set(0, 50, 1200);\n    spotLight.angle = Math.PI / 3\n    spotLight.shadow.camera.near = 200;\n    spotLight.shadow.camera.far = 4000;\n    spotLight.shadow.mapSize.width = 4096;\n    spotLight.shadow.mapSize.height = 4096;\n    spotLight.target = background;\n    scene.add(spotLight);\n\n\n    const camera = new T.PerspectiveCamera(90, width/height, 1, 10000);\n    const renderer = new T.WebGLRenderer({ antialias: true });\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = T.PCFShadowMap;\n    renderer.setSize(width, height);\n    viewEl.appendChild(renderer.domElement);\n\n    camera.position.set(0, -1000, 1000);\n    camera.lookAt(0, 0, 0);\n\n    //scene.add(new T.AxesHelper(5));\n\n    window.d3 = d3;\n\n    Object.assign(this, { scene, camera, renderer });\n  }\n\n  populateScene() {\n    const { scene }  = this;\n\n    const colors = d3.schemeSet3.map(s => parseInt(s.slice(1), 16));\n    const color = i => colors[Math.floor(Math.random()*10)];\n\n    const ribbons = [...Array(20)]\n      .map((_, i) => Ribbon({ color: color(i), data: rdata(), y: 1000 - 100*i }))\n    ;\n\n    scene.add.apply(scene, ribbons);\n\n    Object.assign(this, { ribbons });\n  }\n\n  animate(i) {\n    const { camera, renderer, scene, ribbons } = this;\n\n    ribbons.forEach((r, $i) => {\n      r.position.z = (\n        ((Math.sin((i * PI2 / 100) + ($i * PI2 / 10)) + 1) * 10)\n      ) + 100;\n    });\n\n    // d1 = dchange(d1, box1);\n    // d2 = dchange(d2, box2);\n    // d3 = dchange(d3, box3);\n\n    // box1.position.z += d1 * 10;\n    // box2.position.z += d2 * 10;\n    // box3.position.z += d3 * 10;\n\n    if (camera.position.y < 0) {\n      camera.position.z += 4;\n      camera.position.y += 5;\n      camera.lookAt(0, 0, 0);\n    } else {\n    }\n\n    renderer.render(scene, camera);\n\n    requestAnimationFrame(this.animate.bind(this, ++i % 100));\n  }\n\n  componentDidMount() {\n    this.initialize();\n    this.populateScene();\n    this.animate(0);\n  }\n\n  render() {\n    return <StyledViewWrapper ref={this.viewRef} />;\n  }\n}\n","import React, { Component } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport View from './View';\n\nconst GlobalStyle = createGlobalStyle`\n  html, body {\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n  }\n\n  #root {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst StyledApp = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nexport default class App extends Component {\n  render() {\n    return (\n      <StyledApp>\n        <GlobalStyle />\n        <View />\n      </StyledApp>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}